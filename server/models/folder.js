// Generated by CoffeeScript 1.10.0
var Folder, cozydb;

cozydb = require('cozydb');

module.exports = Folder = cozydb.getModel('Folder', {
  path: String,
  name: String,
  creationDate: String,
  lastModification: String,
  tags: [String]
});

Folder.all = function(params, callback) {
  return Folder.request("all", params, callback);
};

Folder.byFolder = function(params, callback) {
  return Folder.request("byFolder", params, callback);
};

Folder.byFullPath = function(params, callback) {
  return Folder.request("byFullPath", params, callback);
};

Folder.isPresent = function(fullPath, callback) {
  console.log("Folder.isPresent:",fullPath);
  return Folder.request("byFullPath", {
	key: fullPath
  }, function(err, folders) {
	if (err) {
	  callback(err);
	}
	return callback(null, (folders != null) && folders.length > 0);
  });
};

Folder.createNewFolder = function(folder, callback) {
  return Folder.create(folder, function(err, newFolder) {
    if (err) {
      return callback(err);
    } else {
      return callback(null, newFolder);
    }
  });
};

Folder.allPath = function(callback) {
  return Folder.request("byFullPath", function(err, folders) {
    var folder, i, len, paths;
    if (err) {
      return callback(err);
    }
    paths = [];
    for (i = 0, len = folders.length; i < len; i++) {
      folder = folders[i];
      paths.push([folder.getFullPath(), folder._id]);
    }
    return callback(null, paths);
  });
};

Folder.prototype.getFullPath = function() {
  return this.path + "/" + this.name;
};
